# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: A first job Java CI with Gradle

on:
  push:
    branches: [main, stable, 'release/**']
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [main, stable, 'release/**']
  workflow_dispatch:
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Get Time
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 0
        format: 'YYYY-MM-DD-HH-mm-ss'
    
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Gradle build
      uses: gradle/gradle-build-action@v2.2.1
      with:
        gradle-version: 7.4.2
    - run: gradle build    

    - name: Gradle generate allure report
      uses: gradle/gradle-build-action@v2.2.1
      if:   always()
      with:
       gradle-version: 7.4.2
    - run: gradle allureReport

    - name: Upload a Build Artifact - allure report
      uses: actions/upload-artifact@v3.1.0
      if:   always()
      with:
        name: allure-report_${{ github.run_number }}_${{ steps.time.outputs.time }}
        path: build/reports/allure-report/

    - name: Publish Test Report - JUnit table
      uses: dorny/test-reporter@v1.5.0
      if: always()    # run this step even if previous step failed
      with:
        name: JUnit Test results            # Name of the check run which will be created
        path: build/test-results/test/TEST-*.xml    # Path to test results
        reporter: java-junit        # Format of test results
