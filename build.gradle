import com.pswidersk.gradle.python.VenvTask

plugins {
    id 'java'
    id 'idea'
    id "io.qameta.allure-report" version "2.10.0"
    id "com.pswidersk.python-plugin" version "2.1.0"
}

pythonPlugin {
    pythonVersion.set("3.10.4")
}

group 'com.safina.lyudmila'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'java-library'
apply plugin: "io.qameta.allure-report"
apply plugin: "com.pswidersk.python-plugin"

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}
repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: '5.9.0-M1'
    testImplementation "org.testcontainers:testcontainers:1.17.3"
    testImplementation "org.testcontainers:junit-jupiter:1.17.3"
    testImplementation "org.testcontainers:mockserver:1.17.3"
    implementation group: 'org.mock-server', name: 'mockserver-client-java', version: '5.13.2'
    testImplementation group: 'io.qameta.allure', name: 'allure-junit5', version: '2.14.0'
}

test {
    useJUnitPlatform()
}

tasks {
    task(pipInstallAllureCombine, type: VenvTask) {
        venvExec = "pip"
        args = ["install", "--isolated", "allure-combine"]
    }

    task(runGenerateAllureHtml, type: VenvTask) {
        workingDir = file("src/python")
        args = ["generate_allure_html_report.py"]
        environment =
                [
                    "PATH_TO_ALLURE_REPORT": projectDir.getAbsolutePath() + "/build/reports/allure-report/allureReport",
                    "PATH_TO_RESULT": projectDir.getAbsolutePath() + "/build/reports/allure-html"
                ]
        dependsOn(pipInstallAllureCombine)
    }
}